JBoss, Home of Professional Open Source
Copyright 2008, Red Hat, Inc., and others contributors as indicated
by the @authors tag. All rights reserved.
See the copyright.txt in the distribution for a
full listing of individual contributors.
This copyrighted material is made available to anyone wishing to use,
modify, copy, or redistribute it subject to the terms and conditions
of the GNU Lesser General Public License, v. 2.1.
This program is distributed in the hope that it will be useful, but WITHOUT A
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public License,
v.2.1 along with this distribution; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA  02110-1301, USA.

The following instructions indicate how to build the Blacktie components from source

1. DOWNLOAD TOOLS
ALL PLATFORMS
Download Sun Java SE Development Kit 1.5 or greater and ensure the bin folder is in the path
	http://java.sun.com/javase/downloads/index.jsp
Download Apache Maven 2.0.9 and ensure the bin folder is added to the path
	http://maven.apache.org/download.html
Download Apache Ant 1.7.1 and put the bin folder in the path
	http://ant.apache.org/bindownload.cgi
Download Ant-Contrib Cpptasks 1.0-beta5 for Ant and put it in the Ant lib folder
	http://sourceforge.net/project/showfiles.php?group_id=36177&package_id=28636&release_id=589175
download Ant-Contrib 1.0b3 for Ant and put it in the Ant lib folder
	http://sourceforge.net/project/showfiles.php?group_id=36177&package_id=28636&release_id=459052
WINDOWS ONLY
Install Visual V++ 2008 Express Edition (only used to provide the compiler and linker on Windows)
	The PATH environment variable will need the runtime DLLs in it 
		C:\Program Files\Microsoft Visual Studio 9.0\VC\redist\Debug_NonRedist\x86\Microsoft.VC90.DebugCRT
	PATH environment variable will also need the VC++ tools in it
		C:\Program Files\Microsoft Visual Studio 9.0\VC\vcvarsall.bat
ONLY REQUIRED FOR BLACKTIE DEVELOPERS
INSTALL GANYMEDE
	http://www.eclipse.org/downloads/packages/
		I chose the "Eclipse IDE for Java Developers" option and patched it with CDT
ON WINDOWS
	Consider using c:\blacktie\workspace as the workspace folder
ON LINUX
	Consider <USER_HOME>/blacktie/workspace
INSTALL PLUGINS
    CDT 5.0.1 (I choose to install via an "archive update site" everything but the XL support)
       	http://download.eclipse.org/tools/cdt/releases/ganymede/
    m2clipse
    	http://m2eclipse.sonatype.org/update/
	Subclipse (you must be using a 1.5 command line version of svn for Subclipse to recognise your checked out projects)
		http://subclipse.tigris.org/update_1.4.x
	QuantumDB
		http://quantum.sourceforge.net/update-site

2. DOWNLOAD INITIAL BLACKTIE DEPEDENCIES
2.a.i FEDORA ONLY
You can use yum to install several of the required packages: 
for i in apr apr-util expat cppunit
do
        yum install $i
        yum install $i-devel
IGNORE - FUTURE RELEASES ONLY SET UP MYSQL
You will also need to install MYSQL the MYSQL server to run the code generation software:
yum install mysql
yum install mysql-devel
yum install mysql-server
service mysqld start
mysql -u root
create database blazer        

2.b. WINDOWS ONLY
Unfortunately, the binaries are not available for all of the dependencies and so we will need to build them.
The source zips may be download from:
EXPAT 2.0.1
	http://sourceforge.net/project/showfiles.php?group_id=10127&package_id=11277
CPPUNIT 1.12.1
	http://sourceforge.net/project/showfiles.php?group_id=11795&package_id=11019
APR 1.2.12/APR-UTIL 1.2.12
	http://www.mirrorservice.org/sites/ftp.apache.org/apr/
BUILD EXPAT AND CPPUNIT (only need to build cppunit_dll)
	Extract the source zips into <BLACKTIE_HOME>/utils/Expat2.0.1 and <BLACKTIE_HOME>/utils/cppunit-1.12.1
	Build them (follow their own build instructions)
EXTRACT APR/APR-UTIL
	Extract apr-1.2.12 to <BLACKTIE_HOME>/utils/apr
	Extract apr-util-1.2.12 to <BLACKTIE_HOME>/utils/apr-util
	NOTE - You don't build apr and apr-util directly, they are required by Log4Cxx below

3. INSTALL JBOSSTM
Download JBossTM 4.4.0.GA from http://www.jboss.org/jbosstm/downloads/
Unzip:
1. edit <JBOSSTM_HOME>/bin/setup-env.<sh|bat> to set JACORB_HOME to $JBOSSTS_HOME/jacorb
2. edit <JBOSSTM_HOME>/etc/jbossjts-properties.xml to change CONFIGURATION_FILE to NAME_SERVICE
3. edit <JBOSSTM_HOME>/jacorb/etc/jacorb.properties to set ORBInitRef.NameService to corbaloc::localhost:3528/NameService

4. INSTALL LOG4CXX
cd <BLACKTIE_HOME>/utils
svn co -r 696744 http://svn.apache.org/repos/asf/logging/log4cxx/trunk apache-log4cxx
cd apache-log4cxx
64bit MACHINES ONLY
Edit build.properties and set the following properties
	with-apr=/usr/lib64/
	with-apr-util=/usr/lib64/
	apr.include.dir=/usr/include/apr-1
	apr-util.include.dir=/usr/include/apr-1
mvn package

5. INSTALL TAO
Download Full ACE+TAO 5.6.7 from http://download.dre.vanderbilt.edu/
The following is the way we build TAO on our machines, the steps are adapted from:
	http://www.dre.vanderbilt.edu/~schmidt/DOC_ROOT/TAO/TAO-INSTALL.html
cd <BLACKTIE_HOME>/utils
mkdir ACE+TAO-5.6.7
tar xfz ACE+TAO-5.6.7.tar.gz -C ACE+TAO-5.6.7
cd <BLACKTIE_HOME>/utils/ACE+TAO-5.6.7/ACE_wrappers/ace
Edit config.h and insert the following:
	ON LINUX		#include "ace/config-linux.h"
	ON WINDOWS		#include "ace/config-win32.h"
ON LINUX
	cd <BLACKTIE_HOME>/utils/ACE+TAO-5.6.7/ACE_wrappers/include/makeinclude
	Edit platform_macros.GNU insert the following:
		include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
It will be easiest to make these exports persistent
	ACE_ROOT=<BLACKTIE_HOME>/utils/ACE+TAO-5.6.6/ACE_wrappers
	TAO_ROOT=<ACE_ROOT>/TAO
	ON LINUX		LD_LIBRARY_PATH=$ACE_ROOT/lib
	ON WINDOWS		PATH=%ACE_ROOT%/lib;%ACE_ROOT%/bin
	
cd <ACE_ROOT>/ace
	ON LINUX		make 
	ON WINDOWS		open ace sln and build
cd <ACE_ROOT>/apps/gperf/src
	ON LINUX		make
	ON WINDOWS		open gperf sln and build
cd <TAO_ROOT>/TAO_IDL
	ON LINUX		make
	ON WINDOWS		open TAO_IDL sln and build
cd <TAO_ROOT>/tao
	ON LINUX		make
	ON WINDOWS		open tao sln and build
cd <TAO_ROOT>/orbsvcs/orbsvcs
	ON LINUX		make
	ON WINDOWS		open orbsvcs sln and build
					ignore fails in CosNotification_Persist, RTKokyuEvent, HTIOP
cd <TAO_ROOT>/orbsvcs/Naming_Service
	ON LINUX		make
	ON WINDOWS		open Naming_Service sln and build


6. INSTALL JACORB
Download Jacorb version 2.2.3 from http://www.jacorb.org/downloadcontents.html
Extract into <BLACKTIE_HOME>/utils
Cd into the lib folder
mvn install:install-file -DgroupId=org.jacorb -DartifactId=jacorb -Dversion=2.2.3 -Dpackaging=jar -Dfile=jacorb.jar

7. INSTALL JBOSSAS
Download JBoss AS version 4.2.3.GA from http://www.jboss.org
Extract into <BLACKTIE_HOME>/utils
cd into client
mvn install:install-file -DgroupId=jboss -DartifactId=jbossall-client -Dversion=4.2.3.GA -Dpackaging=jar -Dfile=jbossall-client.jar

8. BUILD PRODUCT
cd <BLACKTIE_HOME>
ANON SVN ACCESS
svn co https://anonsvn.jboss.org/repos/blacktie/trunk product
COMMITTER SVN ACCESS
svn co https://svn.jboss.org/repos/blacktie/trunk product

cd <BLACKTIE_HOME>/product/atmibroker-all
TO BUILD WITHOUT RUNNING TESTS
mvn clean install package assembly:assembly -DskipTests -Dmaven.test.skip=true
TO BUILD WITH RUNNING TESTS
Run the required services for the tests (TAO Name Service/JBoss Transaction Service):
	<BLACKTIE_HOME>/product/scripts/services/runNamingService.sh|bat
	<JBOSSTS_HOME>/bin/start-recovery-manager.sh|bat
	<JBOSSTS_HOME>/bin/start-transaction-service.sh|bat
set PATH/LD_LIBRARY_PATH to include
	../../../target/dependencies:../../../target
mvn clean install 
mvn package assembly:assembly

9. VERIFY THE BUILD
Unfortunately most of the tests fail at the moment so the simplest way to satisfy yourself that the build is ok is to run the samples under $ATMIBROKER_BIN_DIR/examples:
First follow the instructions under ATMIBROKER_BIN_DIR/examples/xatmi/fooapp/README
Then follow the instructions under ATMIBROKER_BIN_DIR/examples/jab/fooapp/README
Finally follow the instructions under ATMIBROKER_BIN_DIR/examples/ejb-connector/fooapp/README

It is worth highlighting that to run applications, the name service and transaction service should also be ran. 
Scripts to launch these are available under: 
<ATMIBROKER_BIN_DIR>/bin/services-scripts


APPENDIX: SET UP ECLIPSE TO START DEVELOPING
In eclipse
        Window -> Preferences -> C/C++ -> Environment
Define
	ACE_ROOT e.g. /home/tom/blacktie/utils/ACE+TAO-5.6.7/ACE_wrappers
	ATMIBROKER_SRC_DIR e.g. /home/tom/blacktie/product
	LOG4CXX_ROOT e.g. /home/tom/blacktie/utils/apache-log4cxx
	TAO_ROOT e.g. ${ACE_ROOT}/TAO
Import the projects under <BLACKTIE_HOME>/product/
RUNNING APPLICATIONS IN ECLIPSE
For running any Blacktie C applications from Eclipse, an PATH/LD_LIBRARY_PATH similar to the following is suggested:
/home/tom/blacktie/product/atmibroker-idl/target/debug/shared/:/home/tom/blacktie/product/atmibroker-core/target/debug/shared/:/home/tom/blacktie/product/atmibroker-xatmi/target/debug/shared/:/home/tom/blacktie/product/tx-test-utilities/target/debug/shared/:/home/tom/blacktie/product/atmibroker-tx/target/debug/shared/:/home/tom/blacktie/utils/apache-log4cxx/target/debug/shared/:/home/tom/blacktie/utils/ACE+TAO-5.6.7/ACE_wrappers/lib/
RUNNING CODE GENERATION TOOL IN ECLIPSE
When building clients or servers using the provided ANT script you will require the following environment variables set
ACE_ROOT
/home/tom/blacktie/utils/ACE+TAO-5.6.7/ACE_wrappers
ATMIBROKER_BIN_DIR
/home/tom/blacktie/product/atmibroker-all/target/atmibroker-all-1.0-SNAPSHOT-bin.dir
LOG4CXX_ROOT
/home/tom/blacktie/utils/apache-log4cxx
TAO_ROOT
/home/tom/blacktie/utils/ACE+TAO-5.6.7/ACE_wrappers/TAO
An example command line would be:
ant client server -Dserver.includes=BarService.c -Dclient.includes=client.c -Dservice.names=BAR -Dconfiguration.type=debug -Dtoolchain.compiler=gcc
