
 JBoss, Home of Professional Open Source
 Copyright 2009, Red Hat, Inc., and others contributors as indicated
 by the @authors tag. All rights reserved.
 See the copyright.txt in the distribution for a
 full listing of individual contributors.
 This copyrighted material is made available to anyone wishing to use,
 modify, copy, or redistribute it subject to the terms and conditions
 of the GNU Lesser General Public License, v. 2.1.
 This program is distributed in the hope that it will be useful, but WITHOUT A
 WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 You should have received a copy of the GNU Lesser General Public License,
 v.2.1 along with this distribution; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 MA  02110-1301, USA.


 This example uses Berkeley dB (http://www.oracle.com/technology/documentation/berkeley-db/db/index.html) for the Resource Manager
 - I built and installed my copy of the library in /usr/local/BerkeleyDB.4.7/lib/libdb
 The file Environment.xml (in the linux and win32 directories) needs to reference the location of this library so if you
 install it elsewhere remember to update the <XA_LIB_NAME> tag.
 (Similarly on a win32 build the library name needs to point to the correct dll).


1. SET ENVIRONMENT VARIABLES
In order to run the example you need to make sure that you have set the environment
appropriately. You will need to make sure that you edit the variables with values starting with REPLACE_WITH_: 
On Linux you need to edit:
    $BLACKTIE_BIN_DIR/setenv.sh
On Windows:
    %BLACKTIE_BIN_DIR%\setenv.bat
Then, execute the script setenv

2. CREATE THE SERVER
On Linux:
    $BLACKTIE_BIN_DIR/bin/generate_server.sh -Dservice.names=DBS -Dserver.includes=DbService.c
On Windows:
    %BLACKTIE_BIN_DIR%\bin\generate_server.bat -Dservice.names=DBS -Dserver.includes=DbService.c

3. CREATE THE CLIENT
On Linux:
    $BLACKTIE_BIN_DIR/bin/generate_client.sh -Dclient.includes=client.c
On Windows:
    %BLACKTIE_BIN_DIR%\bin\generate_client.bat -Dclient.includes=client.c

4. RUN THE APPLICATIONS
Make sure that the naming and transaction services are running, if not, run the JBoss server:
<JBOSS_HOME>/bin/run.sh|bat -c blacktie
4.1 RUN THE SERVER
./server -c <win32|linux>
4.2 RUN THE CLIENT
You will need to set the environment variable BLACKTIE_CONFIGURATION_DIR to either win32 or linux prior to running the client
./client <any arg> to write records
./client to read a single record back

Note: The db records are stored in the directories db1 and db2. To clear out the database just delete the contents
but not the directories themselves (on linux rm db*/*)

There is also a non client/server test (source file is xatest.c). It requires the header txClient.h and the needs to
link against the various blacktie libraries.

 For a development build use:

 -I ../../../target/cxx/runtime/include for the header, and
 -L../../../target/cxx/runtime/lib for the libraries
 export LD_LIBRARY_PATH=../../../target/cxx/runtime/lib

 For a binary release use:

 -I <Blacktie install dir>/include for the header, and
 -L<Blacktie install dir>/libTao	- this directory contains all the dependent Blacktie libraries
 export LD_LIBRARY_PATH=<Blacktie install dir>/libTao

 if the test is successful the last thing printed by the test is SUCCESS otherwise FAIL is printed.

 If you decide to get transactional support working with other resource managers we'd be deligted to add it to the examples.

#gcc -DLINUX -D_GNU_SOURCE -D_REENTRANT -g -lm -o xatest xatest.c -fPIC -DPIC  -lpthread  -Wl,--rpath -Wl,/usr/local/BerkeleyDB.4.7/lib -L/usr/local/BerkeleyDB.4.7/lib/libdb -ldb -I ../../../target/cxx/runtime/include -L../../../target/cxx/runtime/lib -lACE -lstomp -lTAO_AnyTypeCode -lTAO_IORInterceptor -lTAO -lapr-1 -latmibroker-corba -lTAO_CodecFactory -lTAO_ObjRefTemplate -lTAO_Valuetype -latmibroker-core -latmibroker-idl -lTAO_CosNaming -lTAO_PI_Server -lxerces-c-3.0 -latmibroker-stomp -lxerces-c -latmibroker-tx -lTAO_IDL_BE -lTAO_PI -lexpat -llog4cxx -lTAO_IDL_FE -lTAO_PortableServer

#./xatest
